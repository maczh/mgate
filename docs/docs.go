// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"github.com/maczh/utils"
	"github.com/swaggo/swag"
	"mgate/service"
)

var apiJson = service.GetApiDocsJson()
var doc = utils.ToJSON(service.GetApiDocsJson())

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     apiJson.Version,
	Host:        apiJson.Host,
	BasePath:    apiJson.BasePath,
	Schemes:     []string{},
	Title:       apiJson.Title,
	Description: apiJson.Description,
}

type s struct{}

func (s *s) ReadDoc() string {
	return utils.ToJSON(service.GetApiDocsJson())
	//sInfo := SwaggerInfo
	//sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)
	//
	//t, err := template.New("swagger_info").Funcs(template.FuncMap{
	//	"marshal": func(v interface{}) string {
	//		a, _ := json.Marshal(v)
	//		return string(a)
	//	},
	//	"escape": func(v interface{}) string {
	//		// escape tabs
	//		str := strings.Replace(v.(string), "\t", "\\t", -1)
	//		// replace " with \", and if that results in \\", replace that with \\\"
	//		str = strings.Replace(str, "\"", "\\\"", -1)
	//		return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
	//	},
	//}).Parse(doc)
	//if err != nil {
	//	return doc
	//}
	//
	//var tpl bytes.Buffer
	//if err := t.Execute(&tpl, sInfo); err != nil {
	//	return doc
	//}
	//
	//return tpl.String()
}

func Init() {
	swag.Register("swagger", &s{})
}
